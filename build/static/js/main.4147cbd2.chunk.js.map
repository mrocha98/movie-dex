{"version":3,"sources":["components/card/movieCard.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","pages/Home/Home.js","App.js","index.js"],"names":["MovieCard","props","state","modalOpen","Card","className","CardActionArea","CardMedia","image","this","movie","images","url","title","CardContent","CardHeader","subheader","premiereDate","dayAndMonth","year","genres","map","genre","index","key","CardActions","style","alignSelf","IconButton","onClick","setState","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","Typography","variant","color","component","synopsis","React","Component","CardList","movies","SearchField","placeholder","handleChange","noValidate","autoComplete","InputBase","onChange","inputProps","type","App","searchField","fetch","then","resp","json","data","items","filteredMovies","filter","toLowerCase","includes","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"+ZAgBaA,G,MAAb,YAEQ,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAEDC,MAAQ,CACTC,WAAW,GAJD,EAF1B,sEAWiB,IAAD,OAEJ,OACA,kBAACC,EAAA,EAAD,CAAMC,UAAU,kBACZ,kBAACC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CACIF,UAAU,aACVG,MAAOC,KAAKR,MAAMS,MAAMC,OAAO,GAAGC,IAClCC,MAAM,WAEV,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIF,MAAOJ,KAAKR,MAAMS,MAAMG,MACxBG,UAAS,sBAAcP,KAAKR,MAAMS,MAAMO,aAAaC,YAA5C,YAA2DT,KAAKR,MAAMS,MAAMO,aAAaE,QAEtG,yBAAKd,UAAU,eAEPI,KAAKR,MAAMS,MAAMU,OAAOC,KACpB,SAACC,EAAOC,GAAR,OAAkB,wBAAIlB,UAAU,aAAamB,IAAKD,GAAhC,IAA0CD,EAA1C,UAKlC,kBAACG,EAAA,EAAD,CAAaC,MAAO,CAACC,UAAW,aAC5B,kBAACC,EAAA,EAAD,CACQF,MAAO,CAACC,UAAW,YACnBE,QAAS,kBAAM,EAAKC,SAAS,CAAC3B,WAAY,EAAKD,MAAMC,aACrD4B,gBAAetB,KAAKP,MAAMC,UAC1B6B,aAAW,aAEf,kBAAC,IAAD,QAKR,kBAACC,EAAA,EAAD,CAAUC,GAAIzB,KAAKP,MAAMC,UAAWgC,QAAQ,OAAOC,eAAa,GAC5D,kBAACtB,EAAA,EAAD,KACI,kBAACuB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KACvD/B,KAAKR,MAAMS,MAAM+B,kBAlDlD,GAA+BC,IAAMC,YCZxBC,EAAW,SAAA3C,GAEpB,OAEI,yBAAKI,UAAU,aAEPJ,EAAM4C,SAAW,GACb5C,EAAM4C,OAAOxB,KACT,SAACX,EAAOa,GAAR,OAAkB,kBAAC,EAAD,CAAWC,IAAKD,EAAOb,MAAOA,OAElD,O,yBCNToC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAEzB,0BAAM3C,UAAU,SAAS4C,YAAU,EAACC,aAAa,OAEhD,kBAACC,EAAA,EAAD,CACCC,SAAUJ,EACVD,YAAaA,EACbM,WAAY,CAAE,aAAc,0BAE7B,kBAACzB,EAAA,EAAD,CAAY0B,KAAK,SAAStB,aAAW,UACpC,kBAAC,IAAD,UCViBuB,E,YAEpB,aAAc,IAAD,8BAEZ,+CAEKrD,MAAQ,CACZ2C,OAAQ,GACRW,YAAa,IANF,E,iFAWO,IAAD,OAClBC,MAAM,8HACJC,MAAM,SAAAC,GAAI,OAAIA,EAAKC,UACnBF,MAAM,SAAAG,GAAI,OAAI,EAAK/B,SAAU,CAAEe,OAAQgB,EAAKC,a,+BAItC,IAAD,SAKyBrD,KAAKP,MAA7B2C,EALD,EAKCA,OAAQW,EALT,EAKSA,YAEVO,EAAiBlB,EAAOmB,QAAQ,SAAAtD,GAAK,OAAIA,EAAMG,MAAMoD,cAAcC,SAASV,EAAYS,kBAE9F,OACC,yBAAK5D,UAAU,OACd,yBAAKA,UAAU,cACd,wBAAIA,UAAU,aAAd,wBAEA,kBAAC,EAAD,CACC0C,YAAY,mBACZC,aAAe,SAAAmB,GAAK,OAAI,EAAKrC,SAAU,CAAE0B,YAAaW,EAAMC,OAAOC,YAGrE,kBAAC,EAAD,CAAUxB,OAAQkB,S,GAvCWrB,IAAMC,WCLlBY,E,iLAGjB,OACE,kBAAC,EAAD,U,GAJ2Bb,IAAMC,WCEvC2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4147cbd2.chunk.js","sourcesContent":["import React from 'react'\nimport {\n    CardMedia,\n    Card,\n    Collapse,\n    CardHeader,\n    CardContent,\n    CardActionArea,\n    IconButton,\n    Typography,\n    CardActions\n}  from \"@material-ui/core\";\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport './movieCard.styles.css'\n\nexport class MovieCard extends React.Component{\n        \n        constructor(props){\n            super(props)\n            \n            this.state = {\n                modalOpen: false\n            }\n            \n        }\n        \n        render(){\n            \n            return(\n            <Card className='card-container'>\n                <CardActionArea>\n                    \n                    <CardMedia\n                        className='card-image'\n                        image={this.props.movie.images[0].url}\n                        title='Cartaz'\n                    />\n                    <CardContent>\n                        <CardHeader\n                            title={this.props.movie.title}\n                            subheader={`Estréia: ${this.props.movie.premiereDate.dayAndMonth}/${this.props.movie.premiereDate.year}`}\n                        />\n                        <div className='card-genres'>\n                            {\n                                this.props.movie.genres.map(\n                                    (genre, index) => <h3 className='card-genre' key={index} > {genre} </h3>\n                                )\n                            }\n                        </div>\n                    </CardContent>\n                    <CardActions style={{alignSelf: 'flex-end'}}>\n                        <IconButton\n                                style={{alignSelf: 'flex-end'}}\n                                onClick={() => this.setState({modalOpen: !this.state.modalOpen})}\n                                aria-expanded={this.state.modalOpen}\n                                aria-label=\"show more\"\n                            >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                        \n                    </CardActions>\n                    \n                    <Collapse in={this.state.modalOpen} timeout=\"auto\" unmountOnExit>\n                        <CardContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {this.props.movie.synopsis}\n                            </Typography>\n                        </CardContent>\n                    </Collapse>\n                    \n                </CardActionArea>\n            </Card>\n        )\n    }\n    \n}\n\n/*\n<div className=\"card-container\">\n                \n                <img\n                    src={this.props.movie.images[0].url}\n                    alt=\"Poster\"\n                    className=\"card-image\"\n                />\n                \n                <h1 className='card-title'>{this.props.movie.title}</h1>\n    \n                <div className='card-genres'>\n                    {\n                        this.props.movie.genres.map(\n                            (genre, index) => <h3 className='card-genre' key={index} > {genre} </h3>\n                        )\n                    }\n                </div>\n    \n                <label className='card-lancamento'>Data de estréia: {this.props.movie.premiereDate.dayAndMonth}  </label>\n                \n                <section className='card-sinopse-container' >\n                    <button\n                        className='waves-effect waves-light btn left blue lighten-1'\n                        type='button' onClick={ () => this.setState( {modalOpen: !this.state.modalOpen} ) }>\n                        \n                        <i className=\"material-icons left\">format_align_left</i>Ver sinopse</button>\n                    {\n                        this.state.modalOpen ? <span className='card-sinopse-body'>{this.props.movie.synopsis}</span> : null\n                    }\n                </section>\n            \n            \n            \n            </div>\n */\n","import React from 'react'\nimport './card-list.styles.css'\nimport { MovieCard } from '../card/movieCard.component'\n\nexport const CardList = props => {\n    \n    return(\n        \n        <div className='card-list'>\n            {\n                props.movies !== []?\n                    props.movies.map(\n                        (movie, index) => <MovieCard key={index} movie={movie} />\n                    )\n                    : null\n            }\n        </div>\n        \n    )\n}\n","import React from 'react'\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from '@material-ui/core/IconButton';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './search-box.styles.css'\n\nexport const SearchField = ({ placeholder, handleChange }) => (\n\t\n\t\t<form className='search' noValidate autoComplete=\"off\">\n\t\t\t\n\t\t\t<InputBase\n\t\t\t\tonChange={handleChange}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tinputProps={{ 'aria-label': 'Procure por um filme' }}\n\t\t\t/>\n\t\t\t<IconButton type=\"submit\" aria-label=\"search\">\n\t\t\t\t<SearchIcon />\n\t\t\t</IconButton>\n\t\t</form>\n)\n\n","import React from 'react';\nimport './Home.css';\n\n// Importando componentes\nimport { CardList } from '../../components/card-list/card-list.component'\nimport { SearchField } from '../../components/search-box/search-box.component'\n\n\nexport default class App extends React.Component {\n\t\n\tconstructor(){\n\t\t// Chama o método construtor na classe Component\n\t\tsuper()\n\t\t\n\t\tthis.state = {\n\t\t\tmovies: [],\n\t\t\tsearchField: ''\n\t\t}\n\t\t\n\t}\n\t// Quando este componente for montado, fazer...\n\tcomponentDidMount(){\n\t\tfetch('https://cors-anywhere.herokuapp.com/https://api-content.ingresso.com/v0/events/coming-soon/partnership/moviebot?limit=50\\n')\n\t\t\t.then( resp => resp.json() )\n\t\t\t.then( data => this.setState( { movies: data.items } ))\n\t}\n\t\n\t\n\trender(){\n\t/*\n\t\tDesestruturação \"retira\" uma propriedade de um objeto\n\t \te a salva em uma constante, tornando-o facilmente acessível\n\t */\n\t\tconst { movies, searchField } = this.state\n\t\t// Filtrando/buscando dinamicamente de acordo com o input\n\t\tconst filteredMovies = movies.filter( movie => movie.title.toLowerCase().includes(searchField.toLowerCase()) )\n\t\t\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className='App-header'>\n\t\t\t\t\t<h1 className='App-title'>Em breve nos cinemas</h1>\n\t\t\t\t\t\n\t\t\t\t\t<SearchField\n\t\t\t\t\t\tplaceholder='Search movies...'\n\t\t\t\t\t\thandleChange={ event => this.setState( { searchField: event.target.value } ) }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<CardList movies={filteredMovies}></CardList>\n\t\t\t\t\n\t\t\t</div>\n\t\t\n\t\t);\n\t\t\n\t}\n}\n","import React from 'react';\nimport Home from './pages/Home/Home';\n\nexport default class App extends React.Component {\n  render(){\n\n    return (\n      <Home />\n    );\n\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}